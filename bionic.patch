From 22fb6bbccb10c05027ebbdfb766f8ebd4ca00c61 Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Tue, 12 Apr 2016 19:02:17 -0700
Subject: [PATCH] bionic: Restore non-pie support

Change-Id: I7b1c48775f7fba418db4da9c472d3951a6f2139f
---
 linker/Android.mk | 4 ++++
 linker/linker.cpp | 2 ++
 2 files changed, 6 insertions(+)

diff --git a/linker/Android.mk b/linker/Android.mk
index 0d592c9..f9485c9 100644
--- a/linker/Android.mk
+++ b/linker/Android.mk
@@ -58,6 +58,10 @@ ifeq ($(TARGET_NEEDS_PLATFORM_TEXT_RELOCATIONS),true)
 LOCAL_CPPFLAGS += -DTARGET_NEEDS_PLATFORM_TEXT_RELOCATIONS
 endif
 
+ifeq ($(TARGET_ENABLE_NON_PIE_SUPPORT),true)
+LOCAL_CFLAGS += -DENABLE_NON_PIE_SUPPORT
+endif
+
 # We need to access Bionic private headers in the linker.
 LOCAL_CFLAGS += -I$(LOCAL_PATH)/../libc/
 
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 6cdf1f8..2115469 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -4348,11 +4348,13 @@ static ElfW(Addr) __linker_init_post_relocation(KernelArgumentBlock& args, ElfW(
   }
   si->dynamic = nullptr;
 
+#ifndef ENABLE_NON_PIE_SUPPORT
   ElfW(Ehdr)* elf_hdr = reinterpret_cast<ElfW(Ehdr)*>(si->base);
   if (elf_hdr->e_type != ET_DYN) {
     __libc_fatal("\"%s\": error: only position independent executables (PIE) are supported.",
                  args.argv[0]);
   }
+#endif
 
   // Use LD_LIBRARY_PATH and LD_PRELOAD (but only if we aren't setuid/setgid).
   parse_LD_LIBRARY_PATH(ldpath_env);
-- 
2.7.4

